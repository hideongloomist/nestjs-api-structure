{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "tsconfigRootDir": ".",
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "sonarjs", "jest", "prettier"],
  "extends": [
    "eslint:recommended",
    "airbnb-base",
    "airbnb-typescript/base",
    "plugin:jest/recommended",
    "plugin:sonarjs/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "ignorePatterns": [
    "**/node_modules/**",
    "dist/**",
    "src/entity/**",
    "typings/**"
  ],
  "rules": {
    "no-cond-assign": "off",
    "no-irregular-whitespace": "error",
    "no-unexpected-multiline": "error",
    "valid-jsdoc": [
      "error",
      {
        "requireParamDescription": false,
        "requireReturnDescription": false,
        "requireReturn": false,
        "prefer": {
          "returns": "return"
        }
      }
    ],
    "curly": ["error", "multi-line"],
    "guard-for-in": "error",
    "no-caller": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-invalid-this": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new-wrappers": "error",
    "no-throw-literal": "error",
    "no-with": "error",
    "prefer-promise-reject-errors": "error",
    "no-unused-vars": [
      "error",
      {
        "args": "none"
      }
    ],
    "array-bracket-newline": "off",
    // eslint:recommended
    "array-bracket-spacing": ["error", "never"],
    "array-element-newline": "off",
    // eslint:recommended
    "block-spacing": ["error", "never"],
    "brace-style": "off",
    "camelcase": [
      "error",
      {
        "properties": "never"
      }
    ],
    "comma-dangle": ["error", "always-multiline"],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    "eol-last": "error",
    "func-call-spacing": "error",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "linebreak-style": "error",
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreUrls": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "new-cap": "error",
    "no-array-constructor": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2
      }
    ],
    "no-new-object": "error",
    "no-tabs": "error",
    "no-trailing-spaces": "error",
    "object-curly-spacing": "error",
    //"object-property-newline":"off",
    "one-var": [
      "error",
      {
        "var": "never",
        "let": "never",
        "const": "never"
      }
    ],
    //"one-var-declaration-per-line":"off",
    //"operator-assignment":"off",
    "operator-linebreak": ["error", "after"],
    "padded-blocks": ["error", "never"],
    //"padding-line-between-statements":"off",
    "quote-props": ["error", "consistent"],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    "require-jsdoc": [
      "error",
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": true,
          "ClassDeclaration": true
        }
      }
    ],
    "semi": "error",
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "asyncArrow": "always",
        "anonymous": "never",
        "named": "never"
      }
    ],
    "spaced-comment": ["error", "always"],
    "switch-colon-spacing": "error",
    "arrow-parens": ["error", "always"],
    "constructor-super": "error",
    "generator-star-spacing": ["error", "after"],
    "no-new-symbol": "error",
    "no-this-before-super": "error",
    "no-var": "error",
    "prefer-const": [
      "error",
      {
        "destructuring": "all"
      }
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "rest-spread-spacing": "error",
    "yield-star-spacing": ["error", "after"],
    "@typescript-eslint/no-unused-vars": ["error"],
    "class-methods-use-this": "off",
    // https://github.com/typescript-eslint/typescript-eslint/issues/1277
    "consistent-return": "off",
    "func-names": "off",
    "newline-per-chained-call": "off",
    "no-await-in-loop": "off",
    "no-continue": "off",
    // https://github.com/airbnb/javascript/issues/1342
    "no-param-reassign": [
      "error",
      {
        "props": false
      }
    ],
    // https://github.com/airbnb/javascript/issues/1271
    // https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb-base/rules/style.js#L334-L352
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    "no-underscore-dangle": [
      "error",
      {
        "allow": ["_id"]
      }
    ],
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    "object-curly-newline": "off",
    // Change eslint rule to @typescript-eslint rule
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "no-dupe-class-members": "off",
    "no-duplicate-imports": "off",
    "no-loop-func": "off",
    "no-return-await": "off",
    "no-unused-expressions": "off",
    // https://github.com/benmosher/eslint-plugin-import/issues/1753
    "import/named": "off",
    // https://github.com/benmosher/eslint-plugin-import/issues/1453
    "import/no-cycle": "off",
    "import/no-default-export": "error",
    "import/order": [
      "error",
      {
        "groups": [["builtin", "external", "internal"]],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/prefer-default-export": "off",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "angle-bracket"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "overrides": {
          "constructors": "no-public"
        }
      }
    ],
    // https://github.com/typescript-eslint/typescript-eslint/issues/977
    "@typescript-eslint/lines-between-class-members": "off",
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["strictCamelCase"]
      },
      {
        "selector": "variable",
        "format": ["strictCamelCase", "UPPER_CASE", "StrictPascalCase"]
      },
      // https://github.com/microsoft/TypeScript/issues/9458
      {
        "selector": "parameter",
        "modifiers": ["unused"],
        "format": ["strictCamelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "property",
        "format": null
      },
      {
        "selector": "typeProperty",
        "format": null
      },
      {
        "selector": "typeLike",
        "format": ["StrictPascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      }
    ],
    "@typescript-eslint/no-dupe-class-members": "error",
    "@typescript-eslint/no-duplicate-imports": "error",
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreIIFE": true,
        "ignoreVoid": true
      }
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true,
        "ignoreProperties": true
      }
    ],
    "@typescript-eslint/no-loop-func": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/object-curly-spacing": ["error", "always"],
    "@typescript-eslint/prefer-includes": "off",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/typedef": [
      "error",
      {
        "arrowParameter": true,
        "memberVariableDeclaration": true,
        "parameter": true,
        "propertyDeclaration": true
      }
    ],
    "@typescript-eslint/unbound-method": [
      "error",
      {
        "ignoreStatic": true
      }
    ],
    "sonarjs/no-duplicate-string": "off",
    "prettier/prettier": [
      "error",
      {
        "usePrettierrc": false
      }
    ]
  }
}
